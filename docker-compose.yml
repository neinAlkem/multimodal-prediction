services:
  spark-master:
    container_name: spark-master
    build: .
    image: spark-image
    entrypoint: ['./start-spark.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
      -  ./credentials/credential.json:/credentials/credential.json:ro
    env_file:
      - .env.spark
    ports:
      - '9090:8080'
      - '7077:7077'

  spark-history-server:
    container_name: spark-history
    image: spark-image
    entrypoint: ['./start-spark.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'

  spark-worker:
    image: spark-image
    entrypoint: ['./start-spark.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
      - ./credentials/credential.json:/credentials/credential.json:ro
    environment:
      - SPARK_MASTER=spark://spark-master:7077

volumes:
  spark-logs:

networks:
  default:
    name: spark-network
